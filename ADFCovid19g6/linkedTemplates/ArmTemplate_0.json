{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFCovid19g6"
		},
		"ADLS_covid19workspace_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_covid19workspace'"
		},
		"AzureSqlDB_covid19_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDB_covid19'"
		},
		"ADLS_covid19workspace_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://covid192zdzq2edqrlv2.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_covid19workspace')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_covid19workspace_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_covid19workspace_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDB_covid19')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDB_covid19_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfhostedintegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_workODSRegion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_covid19workspace",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "workregion.parquet",
						"folderPath": "tempworkarea",
						"fileSystem": "workspace"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "CountryKey",
						"type": "INT32"
					},
					{
						"name": "Country",
						"type": "UTF8"
					},
					{
						"name": "CountryCode",
						"type": "UTF8"
					},
					{
						"name": "Latitude",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "Longitude",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "InsertedDT",
						"type": "INT96"
					},
					{
						"name": "UpdateDT",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_covid19workspace')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSql_Region')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDB_covid19",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "odscountry"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDB_covid19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet_ODSRegion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_covid19workspace",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "region.parquet",
						"folderPath": "tempworkarea",
						"fileSystem": "workspace"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "CountryKey",
						"type": "INT32"
					},
					{
						"name": "Country",
						"type": "UTF8"
					},
					{
						"name": "CountryCode",
						"type": "UTF8"
					},
					{
						"name": "Latitude",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "Longitude",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "InsertedDT",
						"type": "INT96"
					},
					{
						"name": "UpdateDT",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_covid19workspace')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet_staging_ASQLRegion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_covid19workspace",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "region.parquet",
						"folderPath": "stagingarea/casesazuresql",
						"fileSystem": "workspace"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Country",
						"type": "UTF8"
					},
					{
						"name": "CountryCode",
						"type": "UTF8"
					},
					{
						"name": "Latitude",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "Longitude",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 5
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_covid19workspace')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Load_Staging_SQLAzureCases')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Region",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSql_Region",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet_staging_ASQLRegion",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSql_Region')]",
				"[concat(variables('factoryId'), '/datasets/Parquet_staging_ASQLRegion')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_ODS_Region')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Parquet_staging_ASQLRegion",
								"type": "DatasetReference"
							},
							"name": "Region"
						},
						{
							"dataset": {
								"referenceName": "ADLS_workODSRegion",
								"type": "DatasetReference"
							},
							"name": "workRegion"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Parquet_ODSRegion",
								"type": "DatasetReference"
							},
							"name": "targetods"
						}
					],
					"transformations": [
						{
							"name": "LookupworkRegion"
						},
						{
							"name": "SurrogateKeycustomerkey"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Selectop"
						}
					],
					"script": "source(output(\n\t\tCountry as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(10,5),\n\t\tLongitude as decimal(10,5)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> Region\nsource(output(\n\t\tCountryKey as integer,\n\t\tCountry as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(10,5),\n\t\tLongitude as decimal(10,5),\n\t\tInsertedDT as timestamp,\n\t\tUpdateDT as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> workRegion\nRegion, workRegion lookup(Region@CountryCode == workRegion@CountryCode,\n\tmultiple: false,\n\tpickup: 'first',\n\tasc(CountryCode, true),\n\tbroadcast: 'auto')~> LookupworkRegion\nSelectop keyGenerate(output(CountryKey as long),\n\tstartAt: 1L) ~> SurrogateKeycustomerkey\nLookupworkRegion derive(output_CountryKey = CountryKey,\n\t\toutput_Country = iif(Region@Country== \"\",workRegion@Country,Region@Country),\n\t\toutput_countrycode = iif(Region@CountryCode==\"\",workRegion@CountryCode,Region@CountryCode),\n\t\toutput_Latitude = iif(Region@Latitude==0,workRegion@Latitude,Region@Latitude),\n\t\toutput_Longitude = iif(Region@Longitude==0,workRegion@Longitude,Region@Longitude),\n\t\toutput_InsertedDT = iif(isNull(workRegion@CountryCode),currentTimestamp(),InsertedDT),\n\t\toutput_UpdateDT = iif(Region@Country!=workRegion@Country || Region@Latitude != workRegion@Latitude || Region@Longitude !=workRegion@Longitude, currentTimestamp(),UpdateDT)) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tCountry = output_Country,\n\t\tCountryCode = output_countrycode,\n\t\tLatitude = output_Latitude,\n\t\tLongitude = output_Longitude,\n\t\tCountryKey,\n\t\tInsertedDT = output_InsertedDT,\n\t\tUpdateDT = output_UpdateDT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Selectop\nSurrogateKeycustomerkey sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCountryKey as integer,\n\t\tCountry as string,\n\t\tCountryCode as string,\n\t\tLatitude as decimal(10,5),\n\t\tLongitude as decimal(10,5),\n\t\tInsertedDT as timestamp,\n\t\tUpdateDT as timestamp\n\t),\n\tformat: 'parquet',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tCountryKey,\n\t\tCountry,\n\t\tCountryCode,\n\t\tLatitude,\n\t\tLongitude,\n\t\tInsertedDT,\n\t\tUpdateDT\n\t)) ~> targetods"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet_staging_ASQLRegion')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_workODSRegion')]",
				"[concat(variables('factoryId'), '/datasets/Parquet_ODSRegion')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_ods')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_ODS_Region",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Create_workfile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_ODS_Region",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Region": {},
									"workRegion": {},
									"targetods": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Create_workfile",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet_ODSRegion",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_workODSRegion",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/load_ODS_Region')]",
				"[concat(variables('factoryId'), '/datasets/Parquet_ODSRegion')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_workODSRegion')]"
			]
		}
	]
}